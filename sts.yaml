apiVersion: v1
kind: Service
metadata:
  name: log-replica-service
spec:
  clusterIP: None  # Headless service for StatefulSet to allow direct pod-to-pod communication
  selector:
    app: log-replica-app
  ports:
    - port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: log-replica-statefulset
  labels:
    app: log-replica-app
spec:
  replicas: 3  # 1 to 3 replica pod and 4 log pods
  selector:
    matchLabels:
      app: log-replica-app
  serviceName: "log-replica-service"  # Headless service for direct communication between pods
  template:
    metadata:
      labels:
        app: log-replica-app
    spec:
      containers:
      - name: log-replica-app
        image: localhost:5000/log-replica:latest  
        command: ["/bin/sh", "-c", "/app/log-replica"]
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: LOG_FILE_PATH
          value: "/app/data/log.yaml" 
        - name: COUNTER_FILE_PATH
          value: "/app/data/counter-%d.yaml" 
        - name: TIME_INTERVAL
          value: "3000"
        - name: TIMEOUT
          value: "5000"
        - name: PORT
          value: ":8080"
        - name: SERVICE_ADDR
          value: "log-replica-statefulset-%d.log-replica-service.default.svc.cluster.local:8080"  # headless service name for replicas  
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: REPLICA_COUNT
          value: "3"  
        volumeMounts:
        - name: log-replica-volume
          mountPath: /app/data
  volumeClaimTemplates:
  - metadata:
      name: log-replica-volume 
    spec:
      accessModes:
        - ReadWriteOnce  
      resources:
        requests:
          storage: 1Gi  
      storageClassName: standard  